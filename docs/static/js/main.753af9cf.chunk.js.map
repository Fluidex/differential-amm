{"version":3,"sources":["differential-amm.js","App.js","reportWebVitals.js","i18n.js","index.js"],"names":["solveQuadraticEquation","a","b","c","discriminant","Math","sqrt","DAMM","this","realBase","virtualBase","realQuote","virtualQuote","totalQuote","totalBase","k","qouteDiff","baseDiff","p","quoteDiff","lowPrice","highPrice","base","dryRun","quote","getQuoteDiffForBaseDiff","console","log","updateBase","getBaseDiffForQuoteDiff","updateQuote","interval","num","sellOrders","i","price","getReserveAtPrice","realBase1","realQuote1","realBase2","avgPrice","amount","push","buyOrders","buy","sell","depth","base0","quote0","dAMM","Infinity","createFromDepthAndReserve","createFromReserve","d","Text","Typography","TabPane","Tabs","Option","Select","levels","InputField","props","min","formatter","value","dotIndex","indexOf","length","parseFloat","toPrecision","styles","select","width","header","display","height","marginTop","backgroundColor","justifyContent","alignItems","check","buyPanel","flex","flexDirection","sellPanel","divider","marginRight","buyAndSell","line","paramPanel","position","minHeight","padding","paddingTop","row","label","input","marginLeft","orderBook","table","tableContainer","maxHeight","title","fontSize","button","tableDivider","marginBottom","App","useState","createFromDepthAndRange","damm","setDamm","useTranslation","t","i18n","setPrice","setDepth","low","setLow","high","setHigh","setBase","setQuote","setInterval","isAutoComputing","setIsAutoComputing","buyingEth","setBuyingEth","buyingUsd","setBuyingUsd","average","setAverage","sellingEth","setSellingEth","sellingUsd","setSellingUsd","setBuyOrders","setSellOrders","buyingEthEdited","setBuyingEthEdited","buyingUsdEdited","setBuyingUsdEdited","sellingEthEdited","setSellingEthEdited","sellingUsdEdited","setSellingUsdEdited","customizePrice","setCustomizePrice","customizeAmount","setCustomizeAmount","isInit","useRef","useEffect","current","newDamm","createFromRangeAndReserve","updateOrderBook","newInterval","orders","toOrders","onIntervalChanged","onPriceChanged","onDepthChanged","onCustomizePriceChanged","e","target","checked","onCustomizeAmountChanged","onLowPriceChanged","onHighPriceChanged","onBaseChanged","onQuoteChanged","formatNumber","str","toString","className","style","defaultActiveKey","onChange","key","tab","readOnly","onBlur","disabled","type","onClick","buyBase","buyWithQuote","usd","eth","sellBase","sellWithQuote","sellForQuote","top","right","changeLanguage","language","columns","dataIndex","render","text","index","color","adjustedSellOrders","sort","map","v","total","originLength","unshift","adjustedBuyOrders","strong","defaultValue","scroll","y","bordered","size","sticky","offsetScroll","dataSource","pagination","borderBottom","showHeader","borderTop","buildOrderBook","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","initReactI18next","init","debug","lng","resources","en","translation","autoComputePrice","maxPrice","minPrice","tokenAmount","customizePriceRange","customizeTokenAmount","zh","react","wait","bindI18n","bindStore","nsMode","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.753af9cf.chunk.js","sourcesContent":["//require(\"util\").inspect.defaultOptions.depth = null;\nfunction solveQuadraticEquation(a, b, c) {\n  const discriminant = b * b - 4 * a * c;\n  const root1 = (-b + Math.sqrt(discriminant)) / (2 * a);\n  const root2 = (-b - Math.sqrt(discriminant)) / (2 * a);\n  return [root1, root2];\n}\nexport default class DAMM {\n  //price: number;\n  //depth: number;\n  realBase\n  realQuote\n  virtualBase\n  virtualQuote\n  k\n  // spread: number; // default 0.003\n\n  get totalBase() {\n    return this.realBase + this.virtualBase;\n  }\n  get totalQuote() {\n    return this.realQuote + this.virtualQuote;\n  }\n  get price() {\n    return this.totalQuote / this.totalBase;\n  }\n  get depth() {\n    return this.totalBase ** 2 / (2 * this.totalQuote);\n  }\n  get lowPrice() {\n    const low = this.virtualQuote ** 2 / this.k;\n    return low;\n  }\n  get highPrice() {\n    const high = this.k / this.virtualBase ** 2;\n    return high;\n  }\n\n  static createFromDepthAndReserve(depth, price, base0, quote0) {\n    const totalBase = 2 * price * depth;\n    const totalQuote = 2 * price ** 2 * depth;\n    const k = totalBase * totalQuote;\n    const virtualBase = totalBase - base0;\n    const virtualQuote = totalQuote - quote0;\n    let dAMM = new DAMM();\n    dAMM.realBase = base0;\n    dAMM.realQuote = quote0;\n    dAMM.virtualBase = virtualBase;\n    dAMM.virtualQuote = virtualQuote;\n    dAMM.k = k;\n    return dAMM;\n  }\n  static createFromDepthAndRange(\n    depth,\n    price,\n    lowPrice = 0,\n    highPrice = Infinity\n  ) {\n    //if (price == null) {\n    //  price = Math.sqrt(lowPrice * highPrice);\n    //}\n    const totalBase = 2 * price * depth;\n    const totalQuote = 2 * price ** 2 * depth;\n    const k = totalBase * totalQuote;\n    const virtualBase = Math.sqrt(k / highPrice);\n    const virtualQuote = Math.sqrt(k * lowPrice);\n    const realBase = totalBase - virtualBase;\n    const realQuote = totalQuote - virtualQuote;\n    //console.log({ depth, price, base0, quote0, totalBase, totalQuote });\n    return this.createFromDepthAndReserve(depth, price, realBase, realQuote);\n  }\n  static createFromRangeAndReserve(lowPrice, highPrice, base0, quote0) {\n    if (highPrice === Infinity) {\n      // highPrice being Infinity means virtualBase equals to 0\n      let a = 1;\n      let b = -lowPrice * base0;\n      let c = -lowPrice * base0 * quote0;\n      let roots = solveQuadraticEquation(a, b, c);\n      let virtualQuote = roots[0];\n      let virtualBase = 0;\n      return this.createFromReserve(base0, quote0, virtualBase, virtualQuote);\n    }\n    const avgPrice = Math.sqrt(lowPrice * highPrice);\n    // solve virtualBase\n    // highPrice * virtualBase**2 == virtualQuote**2 / lowPrice == (virtualBase+base0) * (virtualQuote+quote0)\n    // so, virtualBase * avgPrice == virtualQuote\n    let a = avgPrice - highPrice;\n    let b = base0 * avgPrice + quote0;\n    let c = base0 * quote0;\n    let roots = solveQuadraticEquation(a, b, c);\n    let virtualBase = roots[1]; // first root is always negative\n    let virtualQuote = avgPrice * virtualBase;\n    return this.createFromReserve(base0, quote0, virtualBase, virtualQuote);\n  }\n  static createFromReserve(base, quote, virtualBase, virtualQuote) {\n    const totalBase = base + virtualBase;\n    const totalQuote = quote + virtualQuote;\n    const k = totalBase * totalQuote;\n    const price = totalQuote / totalBase;\n    const depth = totalBase ** 2 / (2 * totalQuote);\n    let dAMM = new DAMM();\n    dAMM.realBase = base;\n    dAMM.realQuote = quote;\n    dAMM.virtualBase = virtualBase;\n    dAMM.virtualQuote = virtualQuote;\n    dAMM.k = k;\n    return dAMM;\n  }\n  static getK(p, d) {\n    const k = 4 * p ** 3 * d ** 2;\n    return k;\n  }\n  getBaseDiffForQuoteDiff(qouteDiff) {\n    return this.k / (this.totalQuote + qouteDiff) - this.totalBase;\n  }\n  getQuoteDiffForBaseDiff(baseDiff) {\n    return this.k / (this.totalBase + baseDiff) - this.totalQuote;\n  }\n  getReserveAtPrice(p) {\n    const totalBase = Math.sqrt(this.k / p);\n    const totalQuote = Math.sqrt(this.k * p);\n    return {\n      totalBase: totalBase,\n      totalQuote: totalQuote,\n      realBase: totalBase - this.virtualBase,\n      realQuote: totalQuote - this.virtualQuote,\n    };\n  }\n  updateQuote(quoteDiff) {\n    this.realQuote += quoteDiff;\n    this.realBase =\n      this.k / (this.realQuote + this.virtualQuote) - this.virtualBase;\n  }\n  updateBase(baseDiff) {\n    this.realBase += baseDiff;\n    this.realQuote =\n      this.k / (this.realBase + this.virtualBase) - this.virtualQuote;\n  }\n  getRange() {\n    return [this.lowPrice, this.highPrice];\n  }\n  sellBase(base, dryRun = false) {\n    const quote = -this.getQuoteDiffForBaseDiff(base);\n    console.log(\"avg price\", quote / base);\n    if (!dryRun) this.updateBase(base);\n    return quote;\n  }\n  buyBase(base, dryRun = false) {\n    const quote = this.getQuoteDiffForBaseDiff(-base);\n    console.log(\"avg price\", quote / base);\n    if (!dryRun) this.updateBase(-base);\n    return quote;\n  }\n  sellForQuote(quote, dryRun = false) {\n    const base = this.getBaseDiffForQuoteDiff(-quote);\n    console.log(\"avg price\", quote / base);\n    if (!dryRun) this.updateQuote(-quote);\n    return base;\n  }\n  buyWithQuote(quote, dryRun = false) {\n    const base = -this.getBaseDiffForQuoteDiff(quote);\n    console.log(\"avg price\", quote / base);\n    if (!dryRun) this.updateQuote(quote);\n    return base;\n  }\n  toOrders(interval, num) {\n    // sell orders\n    let sellOrders = [];\n    for (let i = 1; i <= num; i++) {\n      if (this.price + i * interval > this.highPrice) {\n        break;\n      }\n      const {\n        realBase: realBase1,\n        realQuote: realQuote1,\n      } = this.getReserveAtPrice(this.price + (i - 1) * interval);\n      const {\n        realBase: realBase2,\n        realQuote: realQuote2,\n      } = this.getReserveAtPrice(this.price + i * interval);\n      const avgPrice = (realQuote2 - realQuote1) / (realBase1 - realBase2);\n      const amount = realBase1 - realBase2;\n      sellOrders.push({ price: avgPrice, amount: amount });\n    }\n    let buyOrders = [];\n    for (let i = 1; i <= num; i++) {\n      if (this.price - i * interval < this.lowPrice) {\n        break;\n      }\n      const {\n        realBase: realBase1,\n        realQuote: realQuote1,\n      } = this.getReserveAtPrice(this.price - (i - 1) * interval);\n      const {\n        realBase: realBase2,\n        realQuote: realQuote2,\n      } = this.getReserveAtPrice(this.price - i * interval);\n      const avgPrice = (realQuote1 - realQuote2) / (realBase2 - realBase1);\n      const amount = realBase2 - realBase1;\n      buyOrders.push({ price: avgPrice, amount: amount });\n    }\n    return { buy: buyOrders, sell: sellOrders };\n  }\n}\n","import './App.css';\nimport React, {useState, useEffect, useRef} from 'react'\nimport { Typography, Button, InputNumber, Tabs, Checkbox, Table, Select} from 'antd'\nimport DAMM from './differential-amm'\nimport { useTranslation} from \"react-i18next\";\n\nconst {Text} = Typography\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nconst ORDER_AMOUNT = 7\n\nconst levels = [0.01, 0.1, 1, 10, 100, 1000]\n\nfunction InputField(props) {\n  return (\n      <InputNumber  {...props} \n        min={0}\n        formatter={(value) => {\n          //console.log(typeof value)\n          const dotIndex = value.indexOf('.')\n\n          if (dotIndex > -1) {\n            //return parseFloat(value).toPrecision(dotIndex + 3)\n            return value.length < dotIndex + 3  ? value : parseFloat(value).toPrecision(dotIndex + 3)\n          } else {\n            return value\n          }\n        }}\n      />\n  )\n}\n\nfunction App(props) {\n  const [tabIndex, setTabIndex] = useState(0)\n  const [damm, setDamm] = useState(DAMM.createFromDepthAndRange(8.394814025505184, 3445.4497187900683))\n\n  //console.log('props', props)\n  const { t, i18n } = useTranslation();\n\n  //console.log(damm.price, damm.depth, damm.lowPrice, damm.highPrice, damm.realBase, damm.realQuote)\n  const [price, setPrice] = useState(damm.price)\n  const [depth, setDepth] = useState(damm.depth)\n\n  const [low, setLow] = useState(damm.lowPrice)\n  const [high, setHigh] = useState(damm.highPrice)\n\n  const [base, setBase] = useState(damm.realBase)\n  const [quote, setQuote] = useState(damm.realQuote)\n\n  const [interval, setInterval] = useState(levels[2])\n  const [isAutoComputing, setIsAutoComputing] = useState(true)\n\n  const [buyingEth, setBuyingEth] = useState(0)\n  const [buyingUsd, setBuyingUsd] = useState(0)\n  const [average, setAverage] = useState(0)\n\n  const [sellingEth, setSellingEth] = useState(0)\n  const [sellingUsd, setSellingUsd] = useState(0)\n\n  const [buyOrders, setBuyOrders] = useState([])\n  const [sellOrders, setSellOrders] = useState([])\n\n  const [buyingEthEdited, setBuyingEthEdited] = useState(false)\n  const [buyingUsdEdited, setBuyingUsdEdited] = useState(false)\n\n  const [sellingEthEdited, setSellingEthEdited] = useState(false)\n  const [sellingUsdEdited, setSellingUsdEdited] = useState(false)\n\n  const [customizePrice, setCustomizePrice] = useState(false)\n  const [customizeAmount, setCustomizeAmount] = useState(false)\n\n  const isInit = useRef(true)\n\n  useEffect(() => {\n    if (isInit.current) {\n      isInit.current = false;\n      return\n    }\n\n    if (isAutoComputing) {\n      console.log(low, high, base, quote)\n      const newDamm = DAMM.createFromRangeAndReserve(low, high, base, quote)\n      setDamm(newDamm)\n      setPrice(newDamm.price)\n      setDepth(newDamm.depth)\n      console.log(newDamm.price, newDamm.depth)\n\n      //updateOrderBook(damm)\n    } \n    //console.log('useeffect', low)\n  }, [low, high, base, quote])\n\n  useEffect(() => {\n    console.log('update order book')\n    updateOrderBook(damm)\n  }, [damm])\n\n  const updateOrderBook = (damm, newInterval) => {\n\n    const orders = damm.toOrders(newInterval ? newInterval : interval, ORDER_AMOUNT)\n    setBuyOrders([...orders.buy])\n    setSellOrders([...orders.sell])\n  }\n\n  const onIntervalChanged = async (value) => {\n    setInterval(value)\n\n\n    updateOrderBook(damm, value)\n  }\n\n  const onPriceChanged = (value) => {\n    setPrice(value)\n\n    const newDamm = DAMM.createFromDepthAndRange(depth, value)\n    setDamm(newDamm)\n\n    setLow(newDamm.lowPrice)\n    setHigh(newDamm.highPrice)\n    setBase(newDamm.realBase)\n    setQuote(newDamm.realQuote)\n  }\n\n  const onDepthChanged = (value) => {\n    setDepth(value)\n\n    const newDamm = DAMM.createFromDepthAndRange(value, price)\n    setDamm(newDamm)\n\n    setLow(newDamm.lowPrice)\n    setHigh(newDamm.highPrice)\n    setBase(newDamm.realBase)\n    setQuote(newDamm.realQuote)\n  }\n\n  const onCustomizePriceChanged = (e) => {\n    setCustomizePrice(e.target.checked)\n  }\n\n  const onCustomizeAmountChanged = (e) => {\n    setCustomizeAmount(e.target.checked)\n  }\n\n  const onLowPriceChanged = (value) => {\n    //const adjusted = value > price - 0.01 ? price - 0.01 : value\n\n    setLow(value)\n\n    console.log('price changed', value)\n\n    const newDamm = DAMM.createFromDepthAndRange(depth, price, value, high)\n    setDamm(newDamm)\n\n    setBase(newDamm.realBase)\n    setQuote(newDamm.realQuote)\n  }\n\n  const onHighPriceChanged = (value) => {\n    //const adjusted = value < price + 0.01 ? price + 0.01 : value\n    setHigh(value)\n\n\n    const newDamm = DAMM.createFromDepthAndRange(depth, price, low, value)\n    setDamm(newDamm)\n\n    setBase(newDamm.realBase)\n    setQuote(newDamm.realQuote)\n  }\n\n  const onBaseChanged = (value) => {\n    setBase(value)\n\n    const newDamm = DAMM.createFromDepthAndReserve(depth, price, value, quote)\n    setDamm(newDamm)\n\n    setLow(newDamm.lowPrice)\n    setHigh(newDamm.highPrice)\n  }\n\n  const onQuoteChanged = (value) => {\n    setQuote(value)\n\n    const newDamm = DAMM.createFromDepthAndReserve(depth, price, base, value)\n    setDamm(newDamm)\n\n    setLow(newDamm.lowPrice)\n    setHigh(newDamm.highPrice)\n  }\n\n  const buildAutoComputing = () => {\n    return (\n        <div>\n          <div style={styles.row}>\n            <Text style={styles.label}>{t('price')}</Text>\n            <InputField style={styles.input} readOnly={true} min={0} value={price} onChange={setPrice} />\n            <Text>USD</Text>\n          </div>\n          <div style={styles.row}>\n            <Text style={styles.label}>{t('depth')}</Text>\n            <InputField style={styles.input} readOnly={true} min={0} value={depth} onChange={setDepth} />\n            <Text>ETH/USD</Text>\n          </div>\n          <div style={styles.row}>\n            <Text style={styles.label}>{t('minPrice')}</Text>\n            <InputField style={{...styles.input}} min={0} value={low} onChange={setLow} />\n            <Text>USD</Text>\n            <Text style={{...styles.label, marginLeft: 60}}>{t('maxPrice')}</Text>\n            <InputField style={{...styles.input}} min={1} value={high} onChange={setHigh}/>\n            <Text>USD</Text>\n          </div>\n          <div style={styles.row}>\n            <Text style={styles.label}>{t('tokenAmount')}</Text>\n            <InputField style={{...styles.input}} min={0} value={base} onChange={setBase} />\n            <Text style={styles.label}>ETH</Text>\n            <InputField style={{...styles.input, marginLeft: 110}} value={quote} onChange={setQuote}/>\n            <Text>USD</Text>\n          </div>\n        </div>\n    )\n  }\n\n  const onChangeLanguage = (v) => {\n  }\n\n  const buildManualInput = () => {\n    return (\n        <div>\n          <div style={styles.row}>\n            <Text style={styles.label}>{t('price')}</Text>\n            <InputField style={styles.input} min={0} value={price} onChange={onPriceChanged} />\n            <Text>USD</Text>\n          </div>\n          <div style={styles.row}>\n            <Text style={styles.label}>{t('depth')}</Text>\n            <InputField style={styles.input} min={0} value={depth} onChange={onDepthChanged} />\n            <Text>ETH/USD</Text>\n          </div>\n          <div style={styles.row}>\n            <Text style={styles.label} >{t('minPrice')}</Text>\n            <InputField readOnly={!customizePrice} style={{...styles.input}} min={0} value={low} onChange={onLowPriceChanged} \n            onBlur={() => {\n              if (low >= price) {\n                onLowPriceChanged(price)\n              }\n            }}\n            />\n            <Text>USD</Text>\n            <Text style={{...styles.label, marginLeft: 60}}>{t('maxPrice')}</Text>\n            <InputField readOnly={!customizePrice} style={{...styles.input}} min={1} value={high} onChange={onHighPriceChanged}\n            onBlur={() => {\n              if (high <= price) {\n                onHighPriceChanged(price)\n              }\n            }}\n            />\n            <Text>USD</Text>\n          </div>\n          <Checkbox disabled={customizeAmount} style={styles.check} onChange={onCustomizePriceChanged}>{t('customizePriceRange')}</Checkbox>\n          <div style={styles.row}>\n            <Text style={styles.label}>{t('tokenAmount')}</Text>\n            <InputField readOnly={!customizeAmount} style={{...styles.input}} value={base} onChange={onBaseChanged} />\n            <Text style={styles.label}>ETH</Text>\n            <InputField readOnly={!customizeAmount} style={{...styles.input, marginLeft: 110}} min={0} value={quote} onChange={onQuoteChanged}/>\n            <Text>USD</Text>\n          </div>\n          <Checkbox disabled={customizePrice} style={styles.check} onChange={onCustomizeAmountChanged}>{t('customizeTokenAmount')}</Checkbox>\n        </div>\n    )\n  }\n\n  const raiseNumberToPrecision = (number, precision) => {\n    if (number === null || precision === null) {\n      return null;\n    }\n    // Example: 1234.56 @ 0.1 becomes 12345, 1234.56 @ 10 becomes 123.\n    return Math.floor(number / precision) * precision;\n  };\n\n\n  const buildOrderBook = () => {\n    const columns = [\n      {\n        title: 'Price(USDT)',\n        dataIndex: 'price',\n        key: 'price',\n        render: (text, row, index) => {\n          return parseFloat(text) > 0 ? text : <Text style={{color: 'white'}}>0</Text>\n        }\n      },\n      {\n        title: 'Amount(ETH)',\n        dataIndex: 'amount',\n        key: 'amount',\n        render: (text, row, index) => {\n          return parseFloat(text) > 0 ? text : <Text style={{color: 'white'}}>0</Text>\n        }\n      },\n      {\n        title: 'Total(USDT)',\n        dataIndex: 'total',\n        key: 'total',\n        render: (text, row, index) => {\n          return parseFloat(text) > 0 ? text : <Text style={{color: 'white'}}>0</Text>\n        }\n      },\n    ]\n\n    //console.log('>>>sel orders', sellOrders)\n\n    const adjustedSellOrders = sellOrders.sort((a, b) => b.price - a.price).map(v => {\n      return {\n        price: formatNumber(v.price),\n        amount: formatNumber(v.amount),\n        total: formatNumber(v.price * v.amount),\n      }\n    })\n\n    if (adjustedSellOrders.length < ORDER_AMOUNT) {\n      const originLength = adjustedSellOrders.length\n\n      for (let i = 0; i < ORDER_AMOUNT - originLength; i++) {\n        adjustedSellOrders.unshift({\n          price: '-1',\n          amount: '-1',\n          total: '-1',\n        })\n      }\n    }\n\n    const adjustedBuyOrders = buyOrders.sort((a, b) => b.price - a.price).map(v => {\n      return {\n        price: formatNumber(v.price),\n        amount: formatNumber(v.amount),\n        total: formatNumber(v.price * v.amount),\n      }\n    })\n\n    if (adjustedBuyOrders.length < ORDER_AMOUNT) {\n      const originLength = adjustedBuyOrders.length\n\n      for (let i = 0; i < ORDER_AMOUNT - originLength; i++) {\n        adjustedBuyOrders.push({\n          price: '-1',\n          amount: '-1',\n          total: '-1',\n        })\n      }\n    }\n\n    return (\n      <div style={styles.orderBook}>\n        <div style={styles.header}>\n          <Text style={styles.title} strong>Order book</Text>\n          <Select defaultValue={levels[2]} style={styles.select} onChange={onIntervalChanged}>\n            {levels.map(v => {\n              return <Option key={v} value={v} >{v}</Option>\n            })\n            }\n          </Select>\n        </div>\n        <Table columns={columns} scroll={{y: 280}} bordered size={'small'} sticky={{offsetScroll: 180}}\n        dataSource={ adjustedSellOrders } \n        pagination={false} style={{...styles.table, borderBottom: '0px solid #2593fc'}} \n        />\n        <Table showHeader={false} columns={columns} scroll={{y: 280}} bordered size={'small'}\n        dataSource={ adjustedBuyOrders } \n         pagination={false} style={{...styles.table, borderTop: '0px solid #2593fc'}} \n         />\n      </div>\n    )\n  }\n\n  const formatNumber = (num) => {\n    const str = num.toString()\n    const dotIndex = str.indexOf('.')\n    //console.log(str)\n\n    if (dotIndex > -1) {\n      return parseFloat(str).toPrecision(dotIndex + 3)\n    } else {\n      return str\n    }\n  }\n\n  const onChangeTab = (key) => {\n    setIsAutoComputing(key === '0')\n  }\n\n  const buyEth = () => {\n    console.log('buy')\n    setBuyingEthEdited(false)\n    setBuyingUsdEdited(false)\n\n    if (buyingEthEdited) {\n      damm.buyBase(buyingEth, false)\n      setBuyingEth(0)\n      setBuyingUsd(0)\n      setAverage(0)\n\n      const orders = damm.toOrders(interval, ORDER_AMOUNT)\n      setBuyOrders([...orders.buy])\n      setSellOrders([...orders.sell])\n\n      console.log(orders)\n    } else if (buyingUsdEdited) {\n\n      damm.buyWithQuote(buyingUsd, false)\n      setBuyingEth(0)\n      setBuyingUsd(0)\n      setAverage(0)\n\n      const orders = damm.toOrders(interval, ORDER_AMOUNT)\n      setBuyOrders([...orders.buy])\n      setSellOrders([...orders.sell])\n\n      console.log(orders)\n    }\n  }\n\n  const sellEth = () => {\n    console.log('sell')\n    setSellingEthEdited(false)\n    setSellingUsdEdited(false)\n\n    if (sellingEthEdited) {\n      damm.sellBase(sellingEth, false)\n      setSellingEth(0)\n      setSellingUsd(0)\n      setAverage(0)\n\n      const orders = damm.toOrders(interval, ORDER_AMOUNT)\n      setSellOrders([...orders.sell])\n      setBuyOrders([...orders.buy])\n\n      console.log(orders)\n    } else if (sellingUsdEdited) {\n\n      damm.sellWithQuote(sellingUsd, false)\n      setSellingEth(0)\n      setSellingUsd(0)\n      setAverage(0)\n\n      const orders = damm.toOrders(interval, ORDER_AMOUNT)\n      setSellOrders([...orders.sell])\n      setBuyOrders([...orders.buy])\n\n      console.log(orders)\n    }\n  }\n\n  const onBuyingEthChanged = (value) => {\n    setBuyingEth(value)\n\n    const usd = damm.buyBase(value, true) \n    setBuyingUsd(usd)\n\n    setAverage(value > 0 ? usd / value : 0)\n\n    setBuyingEthEdited(true)\n    setBuyingUsdEdited(false)\n  }\n\n  const onBuyingUsdChanged = (value) => {\n    setBuyingUsd(value)\n\n    const eth = damm.buyWithQuote(value, true) \n    setBuyingEth(eth)\n\n    setAverage(value > 0 ? value / eth : 0)\n\n    setBuyingEthEdited(false)\n    setBuyingUsdEdited(true)\n  }\n\n  const onSellingEthChanged = (value) => {\n    setSellingEth(value)\n\n    const usd = damm.sellBase(value, true) \n    setSellingUsd(usd)\n\n    setAverage(value > 0 ? usd / value : 0)\n\n    setSellingEthEdited(true)\n    setSellingUsdEdited(false)\n  }\n\n  const onSellingUsdChanged = (value) => {\n    setSellingUsd(value)\n\n    const eth = damm.sellForQuote(value, true) \n    setSellingEth(eth)\n\n    setAverage(value > 0 ? value / eth : 0)\n\n    setSellingEthEdited(false)\n    setSellingUsdEdited(true)\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={styles.paramPanel}>\n        <Tabs defaultActiveKey=\"0\" onChange={onChangeTab}>\n          <TabPane tab={t('setPrice')} key=\"1\">\n            {buildManualInput()}\n          </TabPane>\n          <TabPane tab={t('autoComputePrice')} key=\"0\">\n            {buildAutoComputing()}\n          </TabPane>\n        </Tabs>\n        <div style={styles.line} />\n        <div style={styles.buyAndSell}>\n          <div style={styles.buyPanel}>\n            <Button style={styles.button} type={'primary'} onClick={buyEth}>{'BUY   ETH'}</Button>\n            <div style={styles.row}>\n              <Text style={styles.label}>ETH</Text>\n              <InputField style={{...styles.input}} value={buyingEth} onChange={onBuyingEthChanged} />\n            </div>\n            <div style={styles.row}>\n              <Text style={styles.label}>USD</Text>\n              <InputField style={{...styles.input}} value={buyingUsd} onChange={onBuyingUsdChanged} />\n            </div>\n          </div>\n          <div style={styles.divider} />\n          <div style={styles.sellPanel}>\n            <Button style={styles.button} type={'primary'} onClick={sellEth}>{'SELL   ETH'}</Button>\n            <div style={styles.row}>\n              <Text style={styles.label}>ETH</Text>\n              <InputField style={{...styles.input}} value={sellingEth} onChange={onSellingEthChanged} />\n            </div>\n            <div style={styles.row}>\n              <Text style={styles.label}>USD</Text>\n              <InputField style={{...styles.input}} value={sellingUsd} onChange={onSellingUsdChanged} />\n            </div>\n          </div>\n        </div>\n        <div style={styles.line} />\n        <div style={styles.row}>\n          <Text style={styles.label}>Avg Price</Text>\n          <InputField readOnly={true}  value={average}  style={{...styles.input}} />\n        </div>\n        <Button style={{position: 'absolute', top: 10, right: 10}} type={'link'} \n        onClick={() => {\n          i18n.changeLanguage(i18n.language === 'zh' ? 'en' : 'zh')\n        }}\n        >\n          {i18n.language === 'zh' ? 'en' : 'zh'}\n          </Button>\n      </div>\n      {\n        buildOrderBook()\n      }\n    </div>\n  );\n}\n\nconst styles = {\n  select: {\n    width: 90,\n  },\n  header: {\n    display: 'flex',\n    width: '100%',\n    height: 48,\n    marginTop: 0,\n    backgroundColor: 'white',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  check: {\n    marginTop: 10,\n  },\n  buyPanel: {\n    display: 'flex',\n    flex: 1,\n    backgroundColor: 'white',\n    flexDirection: 'column',\n    marginTop: 10,\n  },\n  sellPanel: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    marginTop: 10,\n  },\n  divider: {\n    marginRight: 30,\n    width: 1,\n    height: 140,\n    backgroundColor: '#f0f0f0',\n  },\n  buyAndSell: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  line: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#f0f0f0',\n    marginTop: 20,\n  },\n  paramPanel: {\n    position: 'relative',\n    flex: 8,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    minHeight: '100vh',\n    padding: 20,\n    paddingTop: 0,\n  },\n  row: {\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 25,\n  },\n  label: {\n    width: 70,\n  },\n  input: {\n    width: 150,\n    marginLeft: 20,\n    marginRight: 20,\n  },\n  orderBook: {\n    display: 'flex',\n    flex: 5,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    minHeight: '100vh',\n    backgroundColor: 'white',\n    padding: 10,\n    paddingTop: 0,\n  },\n  table: {\n    width: '100%',\n    flex: 1,\n  },\n  tableContainer: {\n    width: '100%',\n    minHeight: 400,\n    maxHeight: 400,\n    backgroundColor: 'pink'\n  },\n  title: {\n    fontSize: 18,\n  },\n  button: {\n    width: '50%',\n  },\n  tableDivider: {\n    height: 2,\n    marginBottom: 5,\n    width: '95%',\n    backgroundColor: '#2593fc',\n  },\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(initReactI18next).init({\n  debug: true,\n  lng: 'zh',\n  resources: {\n    en: {\n      translation: {\n        setPrice: 'Preset price and depth',\n        autoComputePrice: 'Preset price range and token amount',\n        maxPrice: 'max price',\n        minPrice: 'min price',\n        tokenAmount: 'amount',\n        price: 'price',\n        depth: 'depth',\n        customizePriceRange: 'customize price range',\n        customizeTokenAmount: 'customize token amount',\n      },\n    },\n    zh: {\n      translation: {\n        setPrice: '指定盘口价格和深度',\n        autoComputePrice: '指定价格范围和资金量',\n        maxPrice: '最高价',\n        minPrice: '最低价',\n        tokenAmount: '做市资金量',\n        price: '盘口价格',\n        depth: '盘口深度',\n        customizePriceRange: '自定义做市价格范围',\n        customizeTokenAmount: '自定义做市资金量',\n      },\n    },\n  },\n  react: {\n    wait: false,\n    bindI18n: 'languageChanged loaded',\n    bindStore: 'added removed',\n    nsMode: 'default',\n  },\n});\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport i18n from './i18n'\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}